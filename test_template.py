#!/usr/bin/env python3\n\nimport tempfile\nimport subprocess\nimport sys\nfrom pathlib import Path\n\ndef test_copier_template():\n    \"\"\"Test that the copier template generates without errors.\"\"\"\n    \n    # Get the template directory\n    template_dir = Path(__file__).parent.parent / \"copier\" / \"mkdocs\"\n    \n    print(f\"Testing template: {template_dir}\")\n    \n    # Create a temporary directory for output\n    with tempfile.TemporaryDirectory() as temp_dir:\n        print(f\"Output directory: {temp_dir}\")\n        \n        try:\n            # Run copier with minimal data\n            result = subprocess.run([\n                \"copier\", \n                \"copy\", \n                str(template_dir),\n                temp_dir,\n                \"--data\", \"project_name=Test Project\",\n                \"--data\", \"repo_name=test-repo\", \n                \"--data\", \"github_username=test-user\",\n                \"--data\", \"header_color=blue-grey\",\n                \"--data\", \"generate_repo_stats=false\",\n                \"--overwrite\"\n            ], capture_output=True, text=True, timeout=60)\n            \n            if result.returncode == 0:\n                print(\"‚úÖ Template generated successfully!\")\n                \n                # List generated files\n                output_path = Path(temp_dir)\n                files = list(output_path.rglob(\"*\"))\n                print(f\"üìÅ Generated {len(files)} files:\")\n                for f in sorted(files)[:10]:  # Show first 10 files\n                    if f.is_file():\n                        print(f\"   {f.relative_to(output_path)}\")\n                        \n                # Check key files exist\n                key_files = [\n                    \"mkdocs.yml\", \n                    \".github/workflows/deploy-docs.yml\",\n                    \"docs/index.html\"\n                ]\n                \n                for key_file in key_files:\n                    file_path = output_path / key_file\n                    if file_path.exists():\n                        print(f\"‚úÖ {key_file}\")\n                    else:\n                        print(f\"‚ùå {key_file} missing\")\n                        \n                return True\n                \n            else:\n                print(f\"‚ùå Template generation failed!\")\n                print(f\"Return code: {result.returncode}\")\n                print(f\"STDOUT: {result.stdout}\")\n                print(f\"STDERR: {result.stderr}\")\n                return False\n                \n        except subprocess.TimeoutExpired:\n            print(\"‚ùå Template generation timed out!\")\n            return False\n        except FileNotFoundError:\n            print(\"‚ùå Copier not found! Install with: pip install copier\")\n            return False\n        except Exception as e:\n            print(f\"‚ùå Unexpected error: {e}\")\n            return False\n\nif __name__ == \"__main__\":\n    success = test_copier_template()\n    sys.exit(0 if success else 1)\n