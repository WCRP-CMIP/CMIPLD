name: JSONLD Graph Builder

on:
  workflow_dispatch:
    inputs:
      updated:
        description: "Only process updated directories?"
        required: true
        default: false
        type: boolean
  workflow_call:
    inputs:
      updated:
        description: "Only process updated directories?"
        required: true
        default: false
        type: boolean

permissions:
  actions: write
  contents: write

jobs:

  find-updated-directories:
    if: ${{ inputs.updated == true }}
    uses: WCRP-CMIP/CMIPLD/actions/find-updated-directories.yml@main
    with:
      base-branch: production

  find-all-directories:
    if: ${{ inputs.updated == false }}
    uses: WCRP-CMIP/CMIPLD/actions/find-all-directories.yml@main



  set-directories:
    runs-on: ubuntu-latest
    needs:
      - find-updated-directories
      - find-all-directories
    if: ${{ always() && ((needs.find-updated-directories.result == 'success') || (needs.find-all-directories.result == 'success')) }}

    outputs:
      directories: ${{ steps.set.outputs.directories }}
    steps:
      - id: set
        run: |
          
          if [ "${{ inputs.updated }}" = "true" ]; then
            dirs='${{ needs.find-updated-directories.outputs.directories }}'
            echo "Using updated directories: $dirs"
          else
            dirs='${{ needs.find-all-directories.outputs.directories }}'
            echo "Using all directories: $dirs"
          fi
          
          # Filter out directories to skip
          SKIP_DIRS='["project", "ignore", ".github"]'
          dirs=$(echo "$dirs" | jq -c --argjson skip "$SKIP_DIRS" '. - $skip')
          
          # Robust fallback with hardcoded directories
          if [ "$dirs" = "" ] || [ "$dirs" = "null" ] || [ "$dirs" = "[]" ] || [ "$dirs" = '[""]' ]; then
            echo "No valid directories found, using fallback"
            dirs='["."]'
          fi
          
          echo "directories=$dirs" >> "$GITHUB_OUTPUT"
          echo "Final directories for matrix: $dirs"

  process-directories:
    needs: set-directories
    if: ${{ always() && needs.set-directories.result == 'success' }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        directory: ${{ fromJson(needs.set-directories.outputs.directories || '["."]') }}
      fail-fast: false
      max-parallel: 10

    steps:
      
      - name: Get a list of directories with updated files
        id: install-cmipld
        uses: WCRP-CMIP/CMIPLD/actions/cmipld@main

      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          ref: production
          
      - name: Set GitHub Pages URL
        run: |
          echo "PAGES_URL=https://${{ github.repository_owner }}.github.io/${{ github.event.repository.name }}" >> "$GITHUB_ENV"
          echo "Pages URL: $PAGES_URL"
          
      ## Create Graph
      - name: Process JSON-LD files in ${{ matrix.directory }}
        run: |
          echo "üîÑ Processing directory: ${{ matrix.directory }}"
          if [ -d "${{ matrix.directory }}" ]; then
            cd "${{ matrix.directory }}"
            # Fixed the curl command and bash execution
            #curl -s https://wcrp-cmip.github.io/CMIPLD/bin/ld2graph | bash -s "../${{ matrix.directory }}/"
            ld2graph "../${{ matrix.directory }}" || {
              echo "‚ö†Ô∏è ld2graph script failed, but continuing"
              exit 1
            }
          else
            echo "‚ö†Ô∏è Skipping - directory doesn't exist"
            exit 1
          fi
          
          # graph files are in the gitignore so we need to force add them
          git add -f *graph* || true
          
      - name: Validate JSON-LD from URL
        run: |
          if [ -f "${{ matrix.directory }}/graph.jsonld" ]; then
            # Fixed the pyld command syntax
            pyld test "${{ matrix.directory }}/graph.jsonld" > /dev/null 2>&1 || {
              echo "‚ö†Ô∏è Validation failed"
              exit 1
            }
          else
            echo "‚ö†Ô∏è No graph.jsonld found in ${{ matrix.directory }}"
            exit 1
          fi

      - name: graph.jsonld files (Minify and Multiply)
        run: |
          find . -type f -name "graph.jsonld" -print0 | while IFS= read -r -d '' file; do
            dir=$(dirname "$file")
            tr -d '[:space:]' < "$file" > "$dir/graph.min.json"
            cp "$dir/graph.min.json" "$dir/graph"
            cp "$dir/graph.min.json" "$dir/graph.json"
          done

      ## Auto-commit changes
      - uses: stefanzweifel/git-auto-commit-action@v4
        with:
          commit_message: "Update JSON-LD graph in ${{ matrix.directory }}"
          branch: production
          file_pattern: "${{ matrix.directory }}/*graph*"
          commit_user_name: "cmip-ipo automation"
          commit_user_email: "actions@wcrp-cmip.org"
          push_options: "--force"
        continue-on-error: true



  production-served-files:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout production branch
        uses: actions/checkout@v4
        with:
          ref: production
      
      
      - name: .json files without extension
        run: |
          find . -type f -name "*.json" \
            ! -path "*/docs/*" \
            ! -path "*/.*" \
            -print0 | while IFS= read -r -d '' file; do
              dir=$(dirname "$file")
              base=$(basename "$file" .json)
              cp "$file" "$dir/$base"
            done

      
      - name: _context to _context.json
        run: |
          find . -type f -name "_context" \
            -print0 | while IFS= read -r -d '' file; do
              dir=$(dirname "$file")
              cp "$file" "$dir/_context.json"
            done


      ## Auto-commit changes
      - uses: stefanzweifel/git-auto-commit-action@v4
        with:
          commit_message: "Pages files updated"
          branch: production
          file_pattern: "*/*"
          commit_user_name: "cmip-ipo automation"
          commit_user_email: "actions@wcrp-cmip.org"
          push_options: "--force"
        continue-on-error: true
