name: Matrix Test - Minimal

on:
  workflow_dispatch:

jobs:
  
  # Test 1: Hardcoded matrix (should always work)
  test-hardcoded-matrix:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        directory: ["del", "experiment", "project"]
    steps:
      - name: Test hardcoded
        run: echo "✅ Hardcoded matrix works: ${{ matrix.directory }}"

  # Test 2: Simple job output
  create-directories:
    runs-on: ubuntu-latest
    outputs:
      dirs: ${{ steps.set.outputs.dirs }}
    steps:
      - id: set
        run: |
          # Use your exact working output
          dirs='["del","experiment","project"]'
          echo "dirs=$dirs" >> $GITHUB_OUTPUT
          echo "Created dirs: $dirs"

  # Test 3: Matrix from job output (this is where it might fail)
  test-job-output-matrix:
    needs: create-directories
    runs-on: ubuntu-latest
    strategy:
      matrix:
        directory: ${{ fromJson(needs.create-directories.outputs.dirs) }}
    steps:
      - name: Test from job output
        run: echo "✅ Job output matrix works: ${{ matrix.directory }}"

  # Test 4: Matrix with explicit condition
  test-conditional-matrix:
    needs: create-directories
    runs-on: ubuntu-latest
    if: needs.create-directories.outputs.dirs != '[]'
    strategy:
      matrix:
        directory: ${{ fromJson(needs.create-directories.outputs.dirs) }}
    steps:
      - name: Test with condition
        run: echo "✅ Conditional matrix works: ${{ matrix.directory }}"

  # Test 5: Debug what's actually being passed
  debug-outputs:
    needs: create-directories
    runs-on: ubuntu-latest
    steps:
      - name: Debug job outputs
        run: |
          echo "Raw output: '${{ needs.create-directories.outputs.dirs }}'"
          echo "Length: $(echo '${{ needs.create-directories.outputs.dirs }}' | wc -c)"
          echo "JSON test:"
          echo '${{ needs.create-directories.outputs.dirs }}' | jq .
          echo "fromJson test:"
          echo "This would create matrix for: ${{ fromJson(needs.create-directories.outputs.dirs) }}"