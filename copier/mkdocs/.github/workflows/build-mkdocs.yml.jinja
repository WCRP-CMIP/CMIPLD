name: Build MkDocs Documentation

on:
  workflow_call:
    inputs:
      build_dir:
        description: 'Directory to output the build'
        required: false
        default: '.src/mkdocs/site'
        type: string
      config_file:
        description: 'Path to mkdocs.yml config file'
        required: false
        default: '.src/mkdocs/mkdocs.yml'
        type: string
      python_version:
        description: 'Python version to use'
        required: false
        default: '3.11'
        type: string
    outputs:
      build_path:
        description: 'Path to the built documentation'
        value: ${{ '{{' }} jobs.build-docs.outputs.build_path }}

jobs:
  build-docs:
    runs-on: ubuntu-latest
    outputs:
      build_path: ${{ '{{' }} steps.build.outputs.build_path }}
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ '{{' }} inputs.python_version }}

      - name: Cache Python dependencies
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ '{{' }} runner.os }}-pip-mkdocs-${{ '{{' }} hashFiles('.src/mkdocs/requirements.txt') }}
          restore-keys: |
            ${{ '{{' }} runner.os }}-pip-mkdocs-
            ${{ '{{' }} runner.os }}-pip-

      - name: Install MkDocs dependencies
        run: |
          python -m pip install --upgrade pip
          if [ -f ".src/mkdocs/requirements.txt" ]; then
            pip install -r .src/mkdocs/requirements.txt
          else
            pip install mkdocs mkdocs-material mkdocs-plotly-plugin mkdocs-gen-files mkdocs-literate-nav
          fi

      - name: Verify MkDocs config
        run: |
          if [ ! -f "${{ '{{' }} inputs.config_file }}" ]; then
            echo "❌ MkDocs config file not found: ${{ '{{' }} inputs.config_file }}"
            exit 1
          fi
          echo "✅ Found MkDocs config: ${{ '{{' }} inputs.config_file }}"

      - name: Run pre-build scripts
        run: |
          # Run any Python scripts in the scripts directory
          if [ -d ".src/mkdocs/scripts" ]; then
            echo "🔧 Running pre-build scripts..."
            for script in .src/mkdocs/scripts/*.py; do
              if [ -f "$script" ]; then
                echo "Running: $script"
                python "$script" || echo "⚠️ Script $script failed but continuing..."
              fi
            done
          fi

      - name: Build MkDocs documentation
        id: build
        run: |
          echo "🏗️ Building MkDocs documentation..."
          mkdocs build -f "${{ '{{' }} inputs.config_file }}" -d "${{ '{{' }} inputs.build_dir }}"
          
          # Verify build was successful
          if [ ! -d "${{ '{{' }} inputs.build_dir }}" ]; then
            echo "❌ Build directory not created: ${{ '{{' }} inputs.build_dir }}"
            exit 1
          fi
          
          if [ ! -f "${{ '{{' }} inputs.build_dir }}/index.html" ]; then
            echo "❌ No index.html found in build output"
            exit 1
          fi
          
          echo "✅ MkDocs build completed successfully"
          echo "build_path=${{ '{{' }} inputs.build_dir }}" >> $GITHUB_OUTPUT

      - name: Upload build artifact
        uses: actions/upload-artifact@v3
        with:
          name: mkdocs-build
          path: ${{ '{{' }} inputs.build_dir }}
          retention-days: 30

      - name: Build summary
        run: |
          echo "## 📚 MkDocs Build Summary" >> $GITHUB_STEP_SUMMARY
          echo "- **Config file**: \`${{ '{{' }} inputs.config_file }}\`" >> $GITHUB_STEP_SUMMARY
          echo "- **Build directory**: \`${{ '{{' }} inputs.build_dir }}\`" >> $GITHUB_STEP_SUMMARY
          echo "- **Python version**: \`${{ '{{' }} inputs.python_version }}\`" >> $GITHUB_STEP_SUMMARY
          echo "- **Build status**: ✅ Success" >> $GITHUB_STEP_SUMMARY
          
          # Count files in build
          file_count=$(find "${{ '{{' }} inputs.build_dir }}" -type f | wc -l)
          echo "- **Files generated**: \`$file_count\`" >> $GITHUB_STEP_SUMMARY
