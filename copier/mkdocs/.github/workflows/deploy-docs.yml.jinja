name: Build and Deploy Documentation

on:
  workflow_dispatch:
  push:
    branches: [ main, production ]

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: true

jobs:
  # Build MkDocs documentation using composite action
  build-docs:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Build MkDocs
        uses: WCRP-CMIP/CMIP-LD/actions/build-mkdocs@main
        with:
          build_dir: '.src/mkdocs/site'
          config_file: '.src/mkdocs/mkdocs.yml'
          python_version: '3.11'
          artifact_name: 'mkdocs-build'

  # Deploy to GitHub Pages
  deploy:
    needs: build-docs
    environment:
      name: github-pages
      url: ${{ '{{' }} steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Download MkDocs build
        uses: actions/download-artifact@v4
        with:
          name: mkdocs-build
          path: mkdocs-site

      - name: Setup Pages
        uses: actions/configure-pages@v5

      - name: Prepare deployment content
        run: |
          # Create deployment directory
          mkdir -p deploy-content
          
          # Copy MkDocs build (main documentation)
          if [ -d "mkdocs-site" ]; then
            cp -r mkdocs-site/* deploy-content/
            echo "‚úÖ MkDocs documentation copied"
          fi
          
          # Copy additional data if it exists (JSON files, etc.)
          if [ -d "src-data" ]; then
            mkdir -p deploy-content/data
            cp -r src-data/* deploy-content/data/
            echo "‚úÖ Source data copied to /data"
          fi
          
          # Copy JSON data folder if it exists
          if [ -d "{{ json_data_folder }}" ]; then
            mkdir -p deploy-content/json
            cp -r {{ json_data_folder }}/* deploy-content/json/
            echo "‚úÖ JSON data copied to /json"
          fi
          
          # List deployment content for debugging
          echo "üìÅ Deployment structure:"
          find deploy-content -type f | head -20
          
          # Verify we have an index page
          if [ ! -f "deploy-content/index.html" ]; then
            echo "‚ö†Ô∏è No index.html found, creating redirect to docs"
            echo '<meta http-equiv="refresh" content="0; url=./docs/">' > deploy-content/index.html
          fi

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: 'deploy-content'
          retention-days: 0

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4

      - name: Deployment summary
        run: |
          echo "## üöÄ Deployment Summary" >> $GITHUB_STEP_SUMMARY
          echo "- **Site URL**: ${{ '{{' }} steps.deployment.outputs.page_url }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Project**: {{ project_name }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Repository**: {{ github_username }}/{{ repo_name }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Theme Color**: {{ header_color }}" >> $GITHUB_STEP_SUMMARY
