# :bar_chart: Repository Statistics

!!! warning "Build-Time Data Snapshot"
    **These statistics are extracted during MkDocs build using GitHub CLI and remain frozen until the next rebuild.**
    
    === ":material-clock-outline: Data Extraction Process"
        - **Extraction Time**: During MkDocs build execution only
        - **GitHub CLI Dependency**: Requires `gh` CLI tool on build server  
        - **Data Freshness**: Reflects repository state at build moment
        - **Update Trigger**: Only when documentation is rebuilt
    
    === ":material-database-off: Static Nature"
        - **No Real-Time Updates**: Data is embedded in static HTML
        - **Frozen Until Rebuild**: Stats won't change until next MkDocs build
        - **Build Server Only**: GitHub CLI not available in browser
        - **Snapshot Accuracy**: Exact state at time of extraction

---

## :rocket: Repository Overview

!!! abstract "Core Metrics (Frozen at Build Time)"

<div class="grid cards" markdown>

-   :material-star: **Stars**
    
    ---
    
    GitHub stars extracted at build time
    
    **`Will show actual count after GitHub CLI extraction`**

-   :material-source-fork: **Forks**
    
    ---
    
    Repository forks extracted at build time
    
    **`Will show actual count after GitHub CLI extraction`**

-   :material-eye: **Watchers**
    
    ---
    
    Active watchers extracted at build time
    
    **`Will show actual count after GitHub CLI extraction`**

-   :material-database: **Repository Size**
    
    ---
    
    Total storage calculated at build time
    
    **`Will show actual size after GitHub CLI extraction`**

</div>

---

## :chart_with_upwards_trend: Traffic Analytics

!!! note "Historical Traffic (14-Day Snapshot at Build Time)"
    Traffic metrics extracted via GitHub CLI covering 14 days prior to build execution. **This data becomes static after extraction.**

### :globe_with_meridians: Visitor Metrics (Build-Time Snapshot)

| :eyes: Total Views | :busts_in_silhouette: Unique Visitors | :arrow_down: Total Clones | :bust_in_silhouette: Unique Cloners |
|:-----------------:|:-------------------------------------:|:-------------------------:|:-----------------------------------:|
| **`GitHub CLI will extract count`** | **`GitHub CLI will extract count`** | **`GitHub CLI will extract count`** | **`GitHub CLI will extract count`** |

### :fire: Popular Content (Build-Time Analysis)

!!! example "Top Pages (Frozen Snapshot)"
    Most visited content extracted via GitHub traffic API at build time.
    
    *Popular pages table will be populated by GitHub CLI during build and frozen as static content...*

### :link: Traffic Sources (Build-Time Analysis)

!!! example "Referrer Analysis (Frozen Snapshot)"
    External traffic sources extracted from 14 days prior to build.
    
    *Referrer analytics extracted via GitHub CLI and embedded as static data...*

---

## :hammer_and_wrench: Development History

!!! abstract "Git History Analysis (Build-Time Extraction)"
    Historical development patterns extracted from repository Git history during build using GitHub CLI.

### :calendar: Commit Activity Timeline

!!! note "Weekly Commits (Frozen Historical Data)"
    GitHub CLI extracts commit frequency data and generates static Plotly chart during build.

<div id="commit-activity-placeholder" style="height: 300px; background: var(--md-default-bg-color); border: 2px dashed var(--md-default-fg-color--lighter); border-radius: 8px; display: flex; align-items: center; justify-content: center; margin: 20px 0; font-family: var(--md-text-font-family);">
    <div style="text-align: center; color: var(--md-default-fg-color--light);">
        <p style="margin: 0; font-style: italic;">üìä Static Plotly chart will be generated here</p>
        <p style="margin: 0; font-size: 0.8em;">GitHub CLI ‚Üí JSON data ‚Üí Embedded visualization</p>
        <p style="margin: 0; font-size: 0.7em; margin-top: 8px;">‚ö†Ô∏è Chart remains frozen until next build</p>
    </div>
</div>

### :chart_increasing: Code Changes Over Time

!!! note "Additions/Deletions (Frozen Historical Data)"  
    GitHub CLI processes Git history to create static code evolution chart.

<div id="code-changes-placeholder" style="height: 300px; background: var(--md-default-bg-color); border: 2px dashed var(--md-default-fg-color--lighter); border-radius: 8px; display: flex; align-items: center; justify-content: center; margin: 20px 0; font-family: var(--md-text-font-family);">
    <div style="text-align: center; color: var(--md-default-fg-color--light);">
        <p style="margin: 0; font-style: italic;">üìà Static Plotly chart will be generated here</p>
        <p style="margin: 0; font-size: 0.8em;">GitHub CLI ‚Üí JSON data ‚Üí Embedded visualization</p>
        <p style="margin: 0; font-size: 0.7em; margin-top: 8px;">‚ö†Ô∏è Chart remains frozen until next build</p>
    </div>
</div>

---

## :technologist: Contributor Analysis

### :trophy: Top Contributors (Build-Time Snapshot)

!!! success "Community Recognition Board (Frozen Data)"
    Contributor rankings extracted from Git history via GitHub CLI at build time.

| Rank | Contributor | Contributions | Extraction Status |
|:----:|-------------|:-------------:|:-----------------:|
| 1 | `GitHub CLI will extract` | `GitHub CLI will extract` | :material-clock-outline: Build-time only |
| 2 | `GitHub CLI will extract` | `GitHub CLI will extract` | :material-clock-outline: Build-time only |
| 3 | `GitHub CLI will extract` | `GitHub CLI will extract` | :material-clock-outline: Build-time only |

*Complete contributor table with avatars extracted via GitHub API during build and frozen as static content...*

---

## :computer: Technology Analysis

### :material-code-json: Language Distribution (Build-Time Analysis)

!!! abstract "Codebase Composition (Frozen at Build Time)"
    Programming language breakdown extracted via GitHub CLI and embedded as static data.

<div class="grid cards" markdown>

-   :material-language-python: **Python**
    
    ---
    
    Percentage calculated during build
    
    `GitHub CLI ‚Üí Static percentage`

-   :material-language-javascript: **JavaScript**
    
    ---
    
    Percentage calculated during build
    
    `GitHub CLI ‚Üí Static percentage`

-   :material-language-markdown: **Markdown**
    
    ---
    
    Percentage calculated during build
    
    `GitHub CLI ‚Üí Static percentage`

-   :material-file-code: **Other Languages**
    
    ---
    
    Combined percentage from build time
    
    `GitHub CLI ‚Üí Static percentage`

</div>

---

## :package: Release History

### :rocket: Recent Releases (Build-Time Snapshot)

!!! releases "Version Timeline (Frozen Data)"
    Release data extracted from GitHub API during build process and embedded as static content.

| Release | Version Tag | Publication Date | Data Status |
|---------|-------------|------------------|-------------|
| `GitHub CLI extraction pending` | `Build-time data` | `Build-time data` | :material-clock-outline: Static after build |

---

## :bug: Issue & PR Tracking

!!! note "Project Health Metrics (Build-Time Snapshot)"
    Issue and pull request status extracted at build time via GitHub CLI. **Counts frozen until next rebuild.**

<div class="grid cards" markdown>

-   :material-alert-circle: **Open Issues**
    
    ---
    
    Count at build time (frozen)
    
    **`GitHub CLI extraction ‚Üí Static count`**

-   :material-check-circle: **Closed Issues**
    
    ---
    
    Count + close rate at build time (frozen)
    
    **`GitHub CLI calculation ‚Üí Static rate`**

-   :material-source-pull: **Open PRs**
    
    ---
    
    Count at build time (frozen)
    
    **`GitHub CLI extraction ‚Üí Static count`**

-   :material-check-all: **Merged PRs**
    
    ---
    
    Count + success rate at build time (frozen)
    
    **`GitHub CLI calculation ‚Üí Static rate`**

</div>

---

## :information_source: Build-Time Extraction Details

!!! gear "GitHub CLI Data Extraction Process"
    
    === ":material-script-text: Extraction Script"
        
        **Script**: `hooks/generate_repo_stats.py`  
        **Runtime**: During MkDocs `gen-files` plugin execution  
        **Requirements**: GitHub CLI (`gh`) installed and authenticated on build server
        **Output**: Static HTML with embedded JSON data for charts
    
    === ":material-api: GitHub CLI Commands Used"
        
        - `gh repo view {repo} --json stargazerCount,forkCount,watchers...` ‚Üí Repository metadata
        - `gh api repos/{repo}/contributors --paginate` ‚Üí Contributor data  
        - `gh api repos/{repo}/traffic/views` ‚Üí 14-day traffic analytics
        - `gh api repos/{repo}/stats/commit_activity` ‚Üí Weekly commit history
        - `gh api repos/{repo}/languages` ‚Üí Language breakdown
        - `gh api repos/{repo}/releases --paginate` ‚Üí Release history
    
    === ":material-clock-fast: Data Lifecycle"
        
        1. **Build Starts**: MkDocs build process begins
        2. **GitHub CLI Execution**: Script queries GitHub API in real-time
        3. **Data Processing**: Raw API responses converted to charts and tables
        4. **Static Embedding**: All data baked into HTML/JSON during build
        5. **Deployment**: Frozen statistics served as static files
        6. **Data Persistence**: Statistics remain unchanged until next build
        7. **Next Update**: Only occurs when MkDocs rebuilds again
    
    === ":material-refresh-off: Static Limitations"
        
        - **No Browser Updates**: GitHub CLI not available in browser environment
        - **Frozen Data**: All metrics locked at build timestamp
        - **Build Dependency**: New stats require complete MkDocs rebuild
        - **API Snapshots**: Traffic data reflects 14 days prior to build only

!!! tip "Updating Statistics"
    To refresh these statistics with current data:
    
    **Manual Update:**
    ```bash
    mkdocs build  # Triggers GitHub CLI extraction
    ```
    
    **Automated Updates:**
    - Set up GitHub Actions to rebuild documentation on schedule
    - Configure CI/CD to rebuild when repository changes
    - Use webhook triggers for automatic updates

!!! warning "Important Limitation"
    Once this page is rendered and deployed, **all displayed statistics are historical snapshots**. The GitHub CLI tools that extract this data are only available during the build process, not in the browser.

---

*This page contains frozen repository analytics extracted during documentation build. Data will not update until the next MkDocs rebuild.*
